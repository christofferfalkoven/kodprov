/// DO NOT EDIT THIS FILE

import static java.lang.System.*;

public class Driver {
    public static void main(String[] args) {
/*
        //List.Node elementToAppend = new List.Node("hej");
        Seq<Object> list = new List<Object>();
        list.prepend(3);
        list.prepend(2);
        list.prepend(1);

        //list.append(1);
        System.out.println(list.first());
        list.contains(1);
        System.out.println("tester");
        //list.append(2);
        //list.append(3);
        System.out.println(list.first());
        System.out.println(list.first().);
        System.out.println(list.last());

        System.out.println(list.last());
        System.out.println(list.first());
        System.out.println(list.current());
        list.size();
        list.display();
        list.rotate();
        //list.display();


        */

        Seq<Object> list = new List<Object>();
	/// Early smoke tests -- if these fail, not much reason to run the rest
        assert list.contains(1) == false : "Seems like contains is broken";
        assert list.size() == 0: "Expected that empty list has size 0";

	/// The basics
        list.append(2);
        //System.out.println("size should be 1 "+list.size());

        //System.out.println("first elem should be 2 "+list.first());
        list.prepend(1);
        //System.out.println("size should be 2 "+list.size());

        //System.out.println("first elem should be 1: "+list.first());
        list.append(3);
        //System.out.println("size should be 3 "+list.size());

        //System.out.println("first elem should be 3: "+list.last());
        assert list.size() == 3: "Seems like size is broken";

        /// Did changes persist?
        System.out.println("Size is: "+list.size());
        System.out.println("Lsa5t elem is: "+list.last());

        assert list.contains(1) : "Expected that list contained 1";
        assert list.contains(2) : "Expected that list contained 2";
        assert list.contains(3) : "Expected that list contained 3";

	/// Remove is tricker to implement than append/insert
        list.append(3);
        list.remove(3);
        assert list.contains(3) : "Seems like remove removed too many 3:s";
        assert list.size() == 3: "Seems like remove is broken";
        list.remove(3);
        System.out.println("Size is: "+list.size());
        assert list.contains(3) == false : "Seems like remove is broken";
        assert list.size() == 2: "Seems like remove or size is broken";

	/// Are helper methods correctly implemented? 1/2
        list.prepend(0);
        System.out.println("First elem is: "+list.first());
        System.out.println("Last elem is: "+list.last());
        list.display();

        assert list.first().equals(0) : "List should be [0, 1, 2] so first is 0, not " + list.first();
        assert list.last().equals(2) : "List should be [0, 1, 2] so last is 2, not " + list.last();
        list.display();
        System.out.println("Size is: "+list.size());

        assert list.get(1).equals(1) : "List should be [0, 1, 2] so middle is 1, not " + list.get(1);

	/// Are helper methods correctly implemented? 2/2
        list.rotate();
        assert list.first().equals(1) : "Rotated list should be [1, 2, 0] so first is 1, not " + list.first();
        assert list.last().equals(0) : "Rotated list should be [1, 2, 0] so last is 0, not " + list.last();
        assert list.get(1).equals(2) : "Rotated list should be [1, 2, 0] so middle is 2, not " + list.get(1);

        System.out.println("Om du endast ser detta meddelande och assertions var korrekt påslaget så har testerna passerat!");

    }

}
